version: "3.8"
services:
  proxy:
    image: nginx:latest
    networks:
      - app
      - dev
    depends_on:
      - ui
      - docs
      - pgadmin
    volumes:
      - ./packages/infra/proxy/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
  ext:
    build:
      context: ./packages/ext
      dockerfile: Dockerfile.local
    volumes:
      - ./:/app
      - ./packages/ext/build:/app/packages/ext/build
    working_dir: /app/packages/ext
    depends_on:
      - api
    networks:
      - app
    command: ["npm", "run", "dev"]
  ui:
    build:
      context: ./packages/ui
      dockerfile: Dockerfile.local
    volumes:
      - ./:/app
    working_dir: /app/packages/ui
    depends_on:
      - api
    networks:
      - app
    command: ["npm", "run", "dev"]
  docs:
    image: nginx:latest
    restart: always
    volumes:
      - ./docs/build:/usr/share/nginx/html/docs
      - ./packages/dls/storybook-static:/usr/share/nginx/html/dls
    networks:
      - dev
  api:
    build:
      context: ./packages/api/container
      dockerfile: Dockerfile.local
      args:
        WWWGROUP: "${WWWGROUP}"
    image: sail-8.2/app
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 9003:80
      - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
    environment:
      WWWUSER: "${WWWUSER}"
      LARAVEL_SAIL: 1
      XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
      XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
      IGNITION_LOCAL_SITES_PATH: "${PWD}"
    volumes:
      - "./packages/api:/var/www/html"
    networks:
      - app
    depends_on:
      - pgsql
  pgsql:
    image: postgres:13.1-alpine
    restart: always
    container_name: pgsql
    ports:
      - "${FORWARD_DB_PORT:-5432}:5432"
    environment:
      PGPASSWORD: "${DB_PASSWORD-secret}"
      POSTGRES_DB: "${DB_DATABASE}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
    volumes:
      - "sail-pgsql:/var/lib/postgresql/data"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-q"
        - "-d"
        - "${DB_DATABASE}"
        - "-U"
        - "${DB_USERNAME}"
      retries: 3
      timeout: 5s
    networks:
      - app
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-foobar@gmail.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-password}
    ports:
      - "${PGADMIN_PORT-8080}:80"
    volumes:
      - ./packages/infra/pgadmin/servers.json:/pgadmin4/servers.json
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - pgsql
    networks:
      - app
  liquibase:
    image: liquibase/liquibase
    depends_on:
      - pgsql
    container_name: liquibase
    networks:
      - app
    volumes:
      - ./data/changelog:/liquibase/changelog
    command: --url="jdbc:postgresql://${DB_CONNECTION}:5432/${DB_DATABASE}?currentSchema=myschema" --changeLogFile=changelog.yml --liquibase-schema-name=public --default-schema-name=public --username=${DB_USERNAME} --password=${DB_PASSWORD} update
networks:
  app:
    driver: bridge
  dev:
    driver: bridge
volumes:
  sail-pgsql:
    driver: local
  pgadmin-data:
    driver: local
